<h1>About</h1>
<p><strong>第一大組</strong></p>
<p>組長：</p>
<p>40923108</p>
<p>組員：</p>
<p>40923101</p>
<p>40923103</p>
<p>40923119</p>
<p>40923137</p>
<p>40923154</p>
<p>40923156</p>
<p>40971134</p>
<p><span>每週會議連結：</span><a href="https://meet.google.com/dnw-uugj-pbw">https://meet.google.com/dnw-uugj-pbw</a></p>
<h1>分組名單</h1>
<p>分組名單</p>
<p><span><strong>cd2022-ag1</strong></span><a href="https://a40923101.github.io/cd2022"><br/></a><a href="https://a40923101.github.io/cd2022">40923101 web</a><span> | </span><a href="https://github.com/a40923101/cd2022">a40923101 repo</a><span> |</span><br/><a href="https://40923103.github.io/cd2022">40923103 web</a><span> | </span><a href="https://github.com/40923103/cd2022">40923103 repo</a><span> |</span><br/><a href="https://40923108.github.io/cd2022">40923108 web</a><span> | </span><a href="https://github.com/40923108/cd2022">40923108 repo</a><span> |<br/></span><a href="https://40923119.github.io/cd2022">40923119 web</a><span> | </span><a href="https://github.com/40923119/cd2022">40923119 repo</a><span> |</span><br/><a href="https://a40923101.github.io/cd2022"></a><span></span><a href="https://40971134.github.io/cd2022">40971134 web</a><span> | </span><a href="https://github.com/40971134/cd2022">40971134 repo</a><span> |<br/><a href="https://40923137.github.io/cd2022">40923137 web</a> | <a href="https://github.com/40923137/cd2022">40923137 repo</a> |<br/><a href="https://40923154.github.io/cd2022">40923154 web</a> | <a href="https://github.com/40923154/cd2022">40923154 repo</a> |<br/><a href="https://zhilin-0817.github.io/cd2022">40923156 web</a> | <a href="https://github.com/ZHILIN-0817/cd2022">ZHILIN-0817 repo</a> |</span><br/><span></span></p>
<p><span><strong>cd2022-ag2</strong></span><br/><a href="https://40923102.github.io/cd2022">40923102 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923102/cd2022">40923102 repo</a><span><span> </span>|</span><br/><a href="https://40923104.github.io/cd2022">40923104 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923104/cd2022">40923104 repo</a><span><span> </span>|</span><br/><a href="https://40923105.github.io/cd2022">40923105 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923105/cd2022">40923105 repo</a><span><span> </span>|</span><br/><a href="https://40923106.github.io/cd2022">40923106 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923106/cd2022">40923106 repo</a><span><span> </span>|</span><br/><a href="https://40923107.github.io/cd2022">40923107 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923107/cd2022">40923107 repo</a><span><span> </span>|</span><br/><a href="https://cyc40923109.github.io/cd2022">40923109 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/CYC40923109/cd2022">CYC40923109 repo</a><span><span> </span>|</span><br/><a href="https://40923110.github.io/cd2022">40923110 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923110/cd2022">40923110 repo</a><span><span> </span>|</span></p>
<p><span><strong>cd2022-ag3</strong></span><br/><a href="https://40923114.github.io/cd2022">40923114 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923114/cd2022">40923114 repo</a><span><span> </span>|</span><br/><a href="https://jason60714.github.io/cd2022">40923115 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/jason60714/cd2022">jason60714 repo</a><span><span> </span>|</span><br/><a href="https://40923122.github.io/cd2022">40923122 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923122/cd2022">40923122 repo</a><span><span> </span>|</span><br/><a href="https://40923129.github.io/cd2022">40923129 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923129/cd2022">40923129 repo</a><span><span> </span>|</span><br/><a href="https://a40923146.github.io/cd2022">40923146 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/a40923146/cd2022">a40923146 repo</a><span><span> </span>|</span><br/><a href="https://40923148.github.io/cd2022">40923148 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923148/cd2022">40923148 repo</a><span><span> </span>|<br/><a href="https://40923157.github.io/cd2022">40923157 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923157/cd2022">40923157 repo</a><span><span> </span>|</span></span><br/><span></span></p>
<p><span><span><strong>cd2022-ag4</strong></span><br/><a href="https://40923111.github.io/cd2022">40923111 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923111/cd2022">40923111 repo</a><span><span> </span>|</span></span><br/><a href="https://40923116.github.io/cd2022">40923116 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923116/cd2022">40923116 repo</a><span><span> </span>|</span><br/><a href="https://40923124.github.io/cd2022">40923124 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923124/cd2022">40923124 repo</a><span><span> </span>|</span><br/><a href="https://40923125.github.io/cd2022">40923125 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923125/cd2022">40923125 repo</a><span><span> </span>|</span><br/><a href="https://40923126-1.github.io/cd2022">40923126 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923126-1/cd2022">40923126-1 repo</a><span><span> </span>|</span><br/><a href="https://40923127-1.github.io/cd2022">40923127 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923127-1/cd2022">40923127-1 repo</a><span><span> </span>|</span><br/><a href="https://40923128.github.io/cd2022">40923128 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923128/cd2022">40923128 repo</a><span><span> </span>|</span><br/><span></span></p>
<p><span><span><strong>cd2022-ag5</strong></span><br/><a href="https://40923120.github.io/cd2022">40923120 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923120/cd2022">40923120 repo</a><span><span> </span>|</span></span><br/><a href="https://40923123.github.io/cd2022">40923123 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923123/cd2022">40923123 repo</a><span><span> </span>|</span><br/><a href="https://40923133.github.io/cd2022">40923133 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923133/cd2022">40923133 repo</a><span><span> </span>|</span><br/><a href="https://40923134.github.io/cd2022">40923134 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923134/cd2022">40923134 repo</a><span><span> </span>|</span><br/><a href="https://40923135.github.io/cd2022">40923135 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923135/cd2022">40923135 repo</a><span><span> </span>|</span><br/><a href="https://40923139.github.io/cd2022">40923139 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923139/cd2022">40923139 repo</a><span><span> </span>|</span><br/><a href="https://40923142.github.io/cd2022">40923142 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923142/cd2022">40923142 repo</a><span><span> </span>|</span><br/><a href="https://40923151.github.io/cd2022">40923151 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923151/cd2022">40923151 repo</a><span><span> </span>|</span><br/><span></span></p>
<p><span><strong>cd2022-ag6</strong></span><br/><a href="https://40923113.github.io/cd2022">40923113 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923113/cd2022">40923113 repo</a><span><span> </span>|<br/><a href="https://40923131.github.io/cd2022">40923131 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923131/cd2022">40923131 repo</a><span><span> </span>|</span></span><br/><a href="https://40923140.github.io/cd2022">40923140 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923140/cd2022">40923140 repo</a><span><span> </span>|</span><br/><a href="https://40923144.github.io/cd2022">40923144 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923144/cd2022">40923144 repo</a><span><span> </span>|</span><br/><a href="https://40923149r.github.io/cd2022">40923149 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923149r/cd2022">40923149r repo</a><span><span> </span>|</span><br/><a href="https://40923150.github.io/cd2022">40923150 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923150/cd2022">40923150 repo</a><span><span> </span>|</span><br/><a href="https://40923152.github.io/cd2022">40923152 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923152/cd2022">40923152 repo</a><span><span> </span>|</span><br/><span></span></p>
<p><span><strong>cd2022-ag7</strong></span><br/><a href="https://40823132.github.io/cd2022">40823132 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40823132/cd2022">40823132 repo</a><span><span> </span>|</span><br/><a href="https://40823143.github.io/cd2022">40823143 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40823143/cd2022">40823143 repo</a><span><span> </span>|</span><br/><a href="https://maxlee999.github.io/cd2022">40923117 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/Maxlee999/cd2022">Maxlee999 repo</a><span><span> </span>|</span><br/><a href="https://40923118.github.io/cd2022">40923118 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923118/cd2022">40923118 repo</a><span><span> </span>|</span><br/><a href="https://40923136-1.github.io/cd2022">40923136 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923136-1/cd2022">40923136-1 repo</a><span><span> </span>|</span><br/><a href="https://40923143.github.io/cd2022">40923143 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923143/cd2022">40923143 repo</a><span><span> </span>|</span><br/><a href="https://40923145.github.io/cd2022">40923145 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923145/cd2022">40923145 repo</a><span><span> </span>|</span><br/><a href="https://40923147.github.io/cd2022">40923147 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923147/cd2022">40923147 repo</a><span><span> </span>|</span></p>
<h1>W3</h1>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">會議記錄表：</span></span></span></span></span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><img alt="" height="451" src="/images/紀錄W3.png" width="850"/></span></span></span></span></span></span></span></p>
<p></p>
<h2>40923101</h2>
<p>指定任務:有 38 個比較接近 NX1980 版本功能的教學影片，以 Wink 影片互相對照的方式採 NX1980 執行操作進行整理，完成後將所負責的 Wink 教學影片嵌入個人與大分組的 w3 中。 test</p>
<p><strong>NX Rendering </strong></p>
<p><span style="color: #ff0000;">NX的渲染功能，可以選擇自己想設計的<strong>顏色</strong>、<strong>線條</strong>、<strong>材質</strong>及<strong>背景</strong>等等。</span></p>
<p><strong></strong></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" video="" width="960">
<source src="https://a40923101.github.io/cd2022/downloads/wink18.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><strong>NX CAM Introduction</strong></p>
<p><span style="color: #ff0000;">NX CAM 簡介，講解如何<strong>設置程序</strong>進行工件<strong>模擬加工</strong>。</span></p>
<p><strong></strong></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" video="" width="960">
<source src="https://a40923101.github.io/cd2022/downloads/wink21.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><strong>NX Sheet Metal Introduction</strong></p>
<p><span style="color: #ff0000;">NX鈑金介紹，利用<strong>板金工具</strong>在繪圖時會更加便利。</span></p>
<p><strong></strong></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" video="" width="960">
<source src="https://a40923101.github.io/cd2022/downloads/wink19.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><strong>Adding a texture with Siemens NX</strong></p>
<p><span style="color: #ff0000;">使用 Siemens NX 工具</span><span style="color: #ff0000;">添加自己喜歡的<strong>紋理</strong>或<strong>圖形</strong>。</span></p>
<p><strong></strong></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" video="" width="960">
<source src="https://a40923101.github.io/cd2022/downloads/wink20.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><strong>CES: NX Animation Designer</strong></p>
<p><span style="color: #ff0000;">NX動畫設計器可以設計出機械產品的<strong>運動<span style="color: #ff0000;">路線</span></strong>。</span></p>
<p><strong></strong></p>
<p><strong></strong></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" video="" width="960">
<source src="https://a40923101.github.io/cd2022/downloads/wink22.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>使用blog來記錄自己每週製作的作業</p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/43.png" width="500"/></p>
<p>編輯好後對<span>local-blog</span>按下<span>右鍵</span>，在按下<span>Goto Script</span></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/40.png" width="500"/></p>
<p>將那段網址複製下來</p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/41.png" width="500"/></p>
<p>在小黑窗打上</p>
<p><span style="background-color: #cc99ff;">cd tmp</span></p>
<p><span style="background-color: #cc99ff;">cd cd2022 </span></p>
<p><span style="background-color: #cc99ff;">pelican markdown -o blog -s local_publishconf.py</span></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/34.png" width="500"/></p>
<p>都好了後可以推看看倉儲，檢查有沒有完成</p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/42.png" width="500"/></p>
<p>每個組員分配不同的繪圖軟體分別是 Solvespace、NX12、NX1980、NX2008 與 Onshape</p>
<p>我是利用<span>NX12來</span>繪製出Pick and Place demo範例所需的零組件</p>
<p>將零件組裝好後</p>
<p>利用Coppeliasim模擬機械運轉</p>
<p>目前零件畫好也也組裝完畢</p>
<p>研究程式碼讓機械手臂可以正常運轉</p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/44.png" width="500"/></p>
<p></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" video="" width="960">
<source src="https://a40923101.github.io/cd2022/downloads/wink23.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h2>40923103</h2>
<p><span style="background-color: #003300; color: #ffffff;">27 Design Fundamentals </span></p>
<p><span style="background-color: #ffffff; color: #000000;">對於工程設計約束和問題了解的越多，解決約束，越容易完成大量的設計。</span></p>
<p><span style="background-color: #ffffff; color: #000000;">像是醫療儀器開發設計過程也使用了NX這類的工具來做設計。</span></p>
<p>利用工具能讓物件生產時較為順利，避免掉較不合理的尺寸或配合上的問題。</p>
<p><strong></strong></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="https://40923103.github.io/cd2022/downloads/0316-1.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
<p><span style="background-color: #003300; color: #ffffff;">28 NX Design Simulation FEM Example</span></p>
<p><span style="background-color: #ffffff; color: #000000;">利用NX畫出長柱體並且研究結構和材料</span></p>
<p><strong></strong></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="https://40923103.github.io/cd2022/downloads/031602.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><span style="background-color: #ffffff; color: #000000;"></span></p>
<p><span style="background-color: #003300; color: #ffffff;">29 Intro Lecture</span></p>
<div class="winkVideoControlBarProgressThumbClass"><span style="color: #000000; background-color: #ffffff;">常見的幾何形狀探討設計公差，使用到的測量儀器</span></div>
<div class="winkVideoPlayOverlayClass"></div>
<p><strong></strong></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="https://40923103.github.io/cd2022/downloads/031603.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h2>40923108</h2>
<p><span>本週任務：</span></p>
<p><span>38 個接近 NX1980 版本功能的教學影片，需以 Wink 影片互相對照的方式採 NX1980 執行操作進行整理，完成後將所負責的 Wink 教學影片嵌入個人與大分組的 w3 中。</span></p>
<p><strong><span style="color: #000000; background-color: #ccffff;">22.Rocker Arm working Drawing</span></strong></p>
<p><strong><span style="color: #000000;">概要：</span></strong><span style="color: #000000;">這部影片是講解將立體圖轉成工作圖、標註和剖面的方式，以及如何隱藏線型。</span></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/NX22.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><strong><span style="color: #000000; background-color: #ccffff;">23.Nx Linked Body Brake Rotor</span></strong></p>
<p><strong>概要：</strong>講述對原有的零件迴轉修剪、孔的定位等修改變成一個<strong>連體煞車盤。</strong></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/NX23.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><span style="background-color: #ccffff;"><b>24.Nx Part Family Example</b></span></p>
<p><b>概要：</b>透過所提供的參數模型，對樂高積木陣列組件，創建一個系列的樂高積木。</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/NX24.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><span style="background-color: #ccffff;"><b>25.Nx Assembly Modeling-Pattern Component</b></span></p>
<p><b>概要：</b>講解如何使用<strong>測量</strong>、<strong>向量的陣列</strong>和<strong>零件約束</strong>以及更<strong>改零件顏色</strong>以便辨認等功能。</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/NX25.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><span style="background-color: #ccffff;"><b>26.Nx Exploded Views</b></span></p>
<p><b><strong>概要：</strong></b>講述著將一個組合件爆炸後進而轉成爆炸圖並說明如何創立零件表和件號。</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/NX26.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h2>40923119</h2>
<p>13</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="600" width="900">
<source src="https://40923119.github.io/cd2022/downloads/13.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>14</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="600" width="900">
<source src="https://40923119.github.io/cd2022/downloads/14.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>15</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="600" width="900">
<source src="https://40923119.github.io/cd2022/downloads/15.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>16</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="600" width="900">
<source src="https://40923119.github.io/cd2022/downloads/16.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h2>40923137</h2>
<p>30</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="800" width="1100">
<source src="https://s40923137.github.io/cd2022/downloads/30.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>31</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="800" width="1100">
<source src="https://s40923137.github.io/cd2022/downloads/31.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>32</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="800" width="1100">
<source src="https://s40923137.github.io/cd2022/downloads/32.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>33</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="800" width="1100">
<source src="https://s40923137.github.io/cd2022/downloads/33.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h2>40923154</h2>
<h2>40923156</h2>
<p>總共有38個 NX1980 相近的 YOUTUBE 教學影片，使用WINK影片重點解說NX1980功能內容。</p>
<p>我要解說的影片總共有6部，編號為7~12 。</p>
<p></p>
<p>7. expression (continued)</p>
<p><span style="background-color: #ffcc00;">設定數據跟限制   截面模數 設定公式 跟查看數值</span></p>
<p><strong></strong></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="1080" video="" width="1980">
<source src="https://zhilin-0817.github.io/cd2022/downloads/3157.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><span style="background-color: #ffcc00;"></span></p>
<p>8. connector nut</p>
<p><span style="background-color: #ffcc00;">畫螺母</span></p>
<p><strong></strong></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="1080" video="" width="1980">
<source src="https://zhilin-0817.github.io/cd2022/downloads/3158.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>9. box</p>
<p><span style="background-color: #ffcc00;">設定直徑 跟高度</span></p>
<p><strong></strong></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="1080" video="" width="1980">
<source src="https://zhilin-0817.github.io/cd2022/downloads/3159.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>10. master model drawing</p>
<p><span style="background-color: #ffcc00;">叫工程圖 放置三視圖 標尺寸 標註解</span></p>
<p><strong></strong></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="1080" video="" width="1980">
<source src="https://zhilin-0817.github.io/cd2022/downloads/31510.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>11. trial head</p>
<p><span style="background-color: #ffcc00;">介紹鑽孔功能</span></p>
<p><strong></strong></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="1080" video="" width="1980">
<source src="https://zhilin-0817.github.io/cd2022/downloads/31511.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>12. datums and layers</p>
<p><span style="background-color: #ffcc00;">介紹 基準面 圖層</span></p>
<p></p>
<p><strong></strong></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="1080" video="" width="1980">
<source src="https://zhilin-0817.github.io/cd2022/downloads/31512.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p></p>
<h2>40971134</h2>
<p>wink17</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="600" width="900">
<source src="https://40971134.github.io/cd2022/downloads/17.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>wink18</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="600" width="900">
<source src="https://40971134.github.io/cd2022/downloads/18.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>wink19</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="600" width="900">
<source src="https://40971134.github.io/cd2022/downloads/19.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>wink20</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="600" width="900">
<source src="https://40971134.github.io/cd2022/downloads/20.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>wink21</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="600" width="900">
<source src="https://40971134.github.io/cd2022/downloads/21.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h1>W6</h1>
<p>使用Leo編輯網頁Blog</p>
<p>教學過程：</p>
<p><span style="background-color: #ccffff;">啟動<strong>leo</strong></span></p>
<p><img alt="" height="441" src="/images/leo1.png" width="850"/></p>
<p><span>點選<span style="color: #000000; background-color: #ccffff;"><strong>File/Open-Outline</strong></span></span></p>
<p><img alt="" height="478" src="/images/leo2.png" width="850"/></p>
<p><span>開啟<span style="background-color: #ccffff;"><strong>pelican </strong></span></span></p>
<p><span>註：此檔存在tmp/cd2022/config下</span></p>
<p><span><img alt="" height="478" src="/images/leo3.png" width="850"/></span></p>
<p><span>將下列部分的原有的資料，改成<span style="color: #ff0000;"><strong>自己的學號</strong></span><span>和</span><span><strong><span style="color: #ff0000;">標題</span><span>和<span style="color: #ff0000;">課程網頁連結</span></span></strong></span></span></p>
<p><span style="color: #000000;"><strong><img alt="" height="478" src="/images/leo5.png" width="850"/></strong></span></p>
<p><img alt="" height="478" src="/images/leo7.png" width="850"/><img alt="" height="447" src="/images/leo教學1 (2).png" width="850"/></p>
<p>全部修改好後先<span style="background-color: #ccffff;">File/Save<span style="background-color: #ff0000;"></span></span></p>
<p><span>接著對</span><span style="color: #ff0000;">local-blog<span style="color: #000000;">按下</span>右鍵</span><span>，在按下</span><span style="color: #ff0000;">Goto Script</span></p>
<p>會顯示<span style="color: #ff0000;">Pelican markdown -o blog -s _publishconf.py</span></p>
<p><span style="color: #000000;">複製後正常推送</span></p>
<p><img alt="" height="444" src="/images/leo9.png" width="850"/></p>
<p></p>
<hr/>
<p>Leo上放wink影片：</p>
<p>在新增wink原始碼前</p>
<p>增加<span style="color: #ff0000;">&lt;link rel="stylesheet" type="text/css" href="./../cmsimde/static/winkPlayer.css"&gt;&lt;/p&gt;</span><br/><span style="color: #ff0000;">&lt;script type="text/javascript" src="./../cmsimde/static/winkPlayer.js"&gt;&lt;/script&gt;</span></p>
<p><span style="color: #000000;">將底線處的字刪掉，並將source src改成連結。</span></p>
<p><span style="color: #ff0000; background-color: #000000;"><img alt="" height="478" src="/images/leo wink2.png" width="850"/></span></p>
<p><span style="color: #ff0000;"></span>test</p>
<p><span style="color: #000000;"></span></p>
<p></p>
<h2>網誌連結</h2>
<p><span style="color: #000000; background-color: #ccffff;">大組課程網誌：</span></p>
<p><a href="https://40923108.github.io/cd2022ag1/blog/index.html">cd2022ag1</a></p>
<p><span style="background-color: #ccffff;">組員課程網誌：</span></p>
<p><a href="https://a40923101.github.io/cd2022/blog/index.html">40923101</a></p>
<p><a href="https://40923103.github.io/cd2022/blog/index.html">40923103</a></p>
<p><a href="https://40923108.github.io/cd2022/blog/index.html">40923108</a></p>
<p><a href="https://40923119.github.io/cd2022/blog/index.html">40923119</a></p>
<p>40923137</p>
<p><a href="https://40923154.github.io/cd2022/blog/index.html">40923154</a></p>
<p><a href="https://zhilin-0817.github.io/cd2022/blog/index.html">40923156</a></p>
<p><a href="https://40971134.github.io/cd2022/blog/index.html">40971134</a></p>
<h1>W8</h1>
<p><span>本週任務：</span></p>
<p><span>依照下列零件檔案, 將組員分為三組, 分別以 Solvespace, NX (12, 1980 或 2008) 及 Onshape, 完成各零件</span><span>工程圖</span><span>與</span><span>組合圖</span><span>後, 將 uarm 組合件轉為<span> </span></span><span>STL 格式後轉入 CoppeliaSim</span><span>, 並安排以 GUI Slider 方式</span><span>控制前三軸作動。</span><span> 各組員需將零組件繪製過程與 CoppeliaSim 操控流程及心得。</span></p>
<hr/>
<p>零件繪製分配：</p>
<p>在這共64個零件中，組員間很有默契達成共識，由40923101及40923108合力繪製46個零件檔，其餘18個檔案平均分配交由小組組員完成。</p>
<p>軟體分配：</p>
<p>40923101：NX12 <a href="https://drive.google.com/drive/u/1/folders/1tseOIRXNp3NYA3W5HwlLTkDxv0CMWlPp">零件檔</a></p>
<p><span>40923103：NX1980 <a href="https://drive.google.com/drive/u/1/folders/1YxlRNHJaj8q7uuqYawizK79GuqGKEJuO">零件檔</a></span></p>
<p><span>40923108：NX12 <a href="https://drive.google.com/drive/u/1/folders/1tseOIRXNp3NYA3W5HwlLTkDxv0CMWlPp">零件檔</a></span></p>
<p><span>40923119：onshape <a href="https://drive.google.com/drive/u/1/folders/1GYbsg1TcnpV7BeN1eENBQ-K0zU-nX9-6">零件檔</a></span></p>
<p><span>40923137：NX2008</span></p>
<p><span>40923154：NX1980 <a href="https://drive.google.com/drive/u/1/folders/1MpGdk_RO4fShCGKFTODcdIH-20DITshT">零件檔</a></span></p>
<p><span>40923156：onshape <a href="https://drive.google.com/drive/u/1/folders/1i1uQ3OUUyACSj_T_CR7nesfnZUVxifOx">零件檔</a></span></p>
<p><span>40971324：solvespace <a href="https://drive.google.com/drive/u/1/my-drive">零件檔</a></span></p>
<h2>組員心得</h2>
<p style="text-align: left;"><span>40923101：</span></p>
<p>在繪圖過程中我們兩個人一組，一個負責查詢零件尺寸另一個繪圖，我們分工合作畫了40幾個零件。在畫螺絲時有很多類似的形狀，當時就在想有沒有更快的方法可以繪製相似零件的方法，這方面可以尋找一些資訊看有沒有迅速便利的方式。接著組合圖沒有太大的問題，按照老師給的組合圖細心的組合是沒問題的，比較麻煩的是CoppeliaSim控制前三軸作動，需要仔細將連桿連接，這方面花費較多的時間去研究，最終還是有完成三軸作動。</p>
<hr/>
<p>40923103：</p>
<p><span>在繪製零件的過程中其實有些許遇到困難，因為有些小細節以及量測問題都讓我頭很大，所幸後來還是有繪製出來。模擬的部分因為總共有153個零件，一開始想試著組裝，到後來眼睛真的快脫窗，所以走了一條捷徑，下載了老師的檔案去模擬，哎呀我真是不應該。</span></p>
<hr/>
<p>40923108：</p>
<p><span>繪製眾多零件的</span><span>過程相當繁瑣、性質相近的零件比例</span><span>相當高，但透過兩人相互合作共同完成了40多個零件，其餘交給其他組員完成，最後整合所有零件，接著是組合、模擬的部分，組合時花費許多時間調整有很多細節要注意，一個出錯可能都會導致後續動作無法進行；而模擬則因為比較不熟悉CoppeliaSim的模式，因此需要花更多心力摸索和討論。</span></p>
<hr/>
<p><span>40923156：</span></p>
<p>心得 這次的課程是協同需要小組跟大組合作，雖然跟上學期的課程有點類似，但還是學到很多不一樣的東西。 例如團隊分工以及工作的團隊在這個一起工作的溝通還有團隊的制度，我覺得這些很重要，因為這會影響我工作心情。在組長的領導下，跟其他組員的溝通沒有障礙然後大家都有照進度表的時間走，讓我們的分工順利完成我覺得很好。組合的部分在組裝過程遇到問題，遇到干涉問題 因為是協同不同人畫的零件放在一起組裝會有許多繁雜的問題，所以目前還在排解問題。之後模擬完成會在匯入一次。</p>
<hr/>
<p>40971134：</p>
<p>在繪圖的方面因為沒學過以上三種繪圖軟體，所以我就從頭開始學習使用NX繪製零件，而組合圖的部分只要按照老師給的組合圖的組合就沒有太大的問題，在CoppeliaSim裡控制前三軸作動需要正確的讓連桿連接，這方面花費較多的時間去研究。</p>
<p></p>
<p></p>
<p></p>
<p></p>
<h1>W11</h1>
<p>w11-1任務：</p>
<p>以每兩人一小組的方式，加入個人 w8-w10 協同設計過程所負責的項目內容與心得。</p>
<p></p>
<p></p>
<h2>w11s1</h2>
<h3>40923101-2</h3>
<p>這週的作業跟期中考一起製作uarm機械</p>
<p>組員分別以Solvespace和NX及Onshape完成零件繪製後</p>
<p>這是我們繪製的uarm各零件圖</p>
<p>總共有64個零件，我繪製了46個零件，剩下的由小組組員完成</p>
<p></p>
<p></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" video="" width="960">
<source src="https://a40923101.github.io/cd2022/downloads/wink24.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>將畫好的零件按照老師給的組合立體圖組合出來</p>
<p>再來存成<span>STL檔就可以轉入CoppeliaSim</span></p>
<p><span><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/50.png" width="500"/></span></p>
<p><span><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/51.png" width="500"/></span></p>
<p><span><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/52.png" width="500"/></span></p>
<p></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" video="" width="960">
<source src="https://a40923101.github.io/cd2022/downloads/wink25.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>將uarm組合件存為STL檔後轉入CoppeliaSim</p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/45.png" width="500"/></p>
<p></p>
<p></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" video="" width="960">
<source src="https://a40923101.github.io/cd2022/downloads/wink26.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>以GUI Slider方式控制前三軸作動</p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/46.png" width="500"/></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/47.png" width="500"/></p>
<p></p>
<p></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" video="" width="960">
<source src="https://a40923101.github.io/cd2022/downloads/wink27.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>在繪圖過程中我們兩個人一組</p>
<p>一個負責查詢零件尺寸另一個繪圖</p>
<p>我們分工合作畫了40幾個零件</p>
<p>在畫螺絲時有很多類似的形狀</p>
<p>當時就在想有沒有更快的方法可以繪製相似零件的方法</p>
<p>這方面可以尋找一些資訊看有沒有迅速便利的方法</p>
<p>接著組合圖沒有太大的問題</p>
<p>按照老師給的組合圖細心的組合是沒問題的</p>
<p>比較麻煩的是CoppeliaSim控制前三軸作動</p>
<p>需要仔細將連桿連接</p>
<p>這方面花費較多的時間去研究</p>
<p>最終還是有完成三軸作動</p>
<h3>40923108-2</h3>
<p><span>w8-w10 協同設計過程所負責的項目內容與心得。</span></p>
<p><span style="color: #000000; background-color: #00ffff;">W8：</span></p>
<p>w8的任務：<span>以 Solvespace, NX (12, 1980 或 2008) 及 Onshape, 完成各零件</span><span>工程圖</span><span>與</span><span>組合圖</span><span>後, 將 uarm 組合件轉為<span> </span></span><span>STL 格式後轉入 CoppeliaSim</span><span>, 並安排以 GUI Slider 方式</span><span>控制前三軸作動。</span></p>
<p><span>與同學共同繪製40多個零件，其餘10幾個零件交由其他組員完成，繪圖過程相當繁瑣，需要有很多耐心慢慢做，接著是組合、模擬的部分，這因為比較不熟悉因此需要花更多心力摸索和討論。</span></p>
<p></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/零件們.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"><span></span></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h2>w11s2</h2>
<h3>40923103-2</h3>
<p><span style="background-color: #ccffff;">W8</span></p>
<p>利用Onshape繪製組合圖側面的箱子，因為這個不能直接拆解會比較複雜，所以分配到這兩個小零件</p>
<p><img alt="" height="400" src="https://40923103.github.io/cd2022/images/%E5%81%B4%E9%9D%A21.png" width="600"/></p>
<p>小組分配繪製零件，我的部分分配到減速箱上蓋和軸承支撐軸</p>
<p><img alt="" height="400" src="https://40923103.github.io/cd2022/images/%E8%BB%B8%E7%A8%B1%E6%94%AF%E6%92%90.png" width="600"/></p>
<p></p>
<p>繪製完後以及匯入其他零件就可以開始組裝，但因過程太過繁雜，索性參考老師已組好的檔案</p>
<p><img alt="" height="400" src="https://40923103.github.io/cd2022/images/%E7%B5%84%E5%90%88%E5%85%A8.png" width="600"/></p>
<p>之後再匯入到<span>CoppeliaSim</span></p>
<p></p>
<p><span style="background-color: #ccffff;">W9</span></p>
<p>上課期間繼續組上禮拜的零件並且放在coppelicim裡模擬</p>
<p>但因為我才剛組好全部的零件，沒有實際去模擬過</p>
<p>時間差不多後就開始自評期中成績</p>
<p><p2>W10</p2></p>
<p><p3>w10_block_ui</p3></p>
<p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
</p>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="https://40923103.github.io/cd2022/downloads/0504%E5%BD%B1%E7%89%87.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><span> </span></p>
<p><p3>w10_nx_integ</p3></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="https://40923103.github.io/cd2022/downloads/nx_integ%E5%BD%B1%E7%89%87.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><p3>w10_ssh</p3></p>
<p><span> </span></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960"><source src="https://40923103.github.io/cd2022/downloads/ssh.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h3>40923156-2</h3>
<p>分別以 Solvespace, NX (12, 1980 或 2008) 及 Onshape, 完成各零件工程圖與組合圖後, 將 uarm 組合件轉為 STL 格式後轉入 CoppeliaSim 我分配到的零件是減速箱下蓋以及軸承支撐圖 因為是用onshape繪製這次的uarm所以有些零件可以直接匯入 但碰到組合件還是需要拆開重畫沒有辦法使用匯入的 1) <img alt="" height="281" src="https://zhilin-0817.github.io/cd2022/images/526.png" width="500"/> 2)</p>
<div class="winkVideoControlBarProgressThumbClass"><img caption="false" src="https://zhilin-0817.github.io/cd2022/images/526-2png.png" width="500"/></div>
<p>3)</p>
<div class="winkVideoControlBarProgressThumbClass"><img alt="" src="https://zhilin-0817.github.io/cd2022/images/6-17--1.png" width="500"/></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
<p>w10_<span>block_ui</span><br/><span style="color: #ff00ff; background-color: #ffff99;"></span></p>
<p>上課內容影片註解</p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="WEEK10-1-wink-files" data-varname="winkVideoData" height="594" static="" video="" width="1056">
<source mp4="" src="https://zhilin-0817.github.io/cd2022/downloads/WEEK10-1.mp4" type="video/mp4" week10-1=""/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>nx integ</p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="594" video="" width="1056">
<source src="https://zhilin-0817.github.io/cd2022/downloads/wink%20-----10-2.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>ssh</p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="wink---10-3-wink-files" data-varname="winkVideoData" height="594" static="" video="" width="1056">
<source src="https://zhilin-0817.github.io/cd2022/downloads/wink---10-3.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h2>w11s3</h2>
<h3>40971134-2</h3>
<p><span><span style="background-color: #ff0000;">W8-W10</span> 協同設計過程所負責的項目內容與心得。</span></p>
<p><strong>W8</strong></p>
<p>組員分別以Solvespace、NX及Onshape繪製uarm機械手臂的零件</p>
<p><span>接下來將uarm組合件存為stl檔後轉入coppeliasim</span></p>
<p><span><img alt="" height="630" src="https://40971134.github.io/cd2022/images/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%20(43).png" width="1008"/></span></p>
<p><span>以GUI Slider方式控制前三軸作動</span></p>
<p><span></span></p>
<p></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="630" width="1008">
<source src="https://40971134.github.io/cd2022/downloads/w8_UI.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>在繪圖的方面因為沒學過以上三種繪圖軟體，所以我就從頭開始學習使用NX繪製零件</p>
<p>而組合圖的部分只要按照老師給的組合圖的組合就沒有太大的問題</p>
<p>在CoppeliaSim裡控制前三軸作動需要正確的讓連桿連接</p>
<p>這方面花費較多的時間去研究</p>
<p></p>
<p><strong>W10</strong></p>
<p><span style="color: #000000; background-color: #00ff00;">w10_block_ui</span></p>
<p><span></span></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="630" width="1008">
<source src="https://40923151.github.io/cd2022/downloads/w10/w10_block_ui.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><span style="background-color: #00ff00;">w10_nx_integ</span></p>
<p><span></span></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="630" width="1008">
<source src="https://40971134.github.io/cd2022/downloads/w10_nx_integ.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><span style="background-color: #00ff00;">w10_ssh</span></p>
<p></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="630" width="1008">
<source src="https://40971134.github.io/cd2022/downloads/w10_ssh.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p></p>
<p></p>
<h1>W12</h1>
<h2>w12 40923101</h2>
<p><span>uarm 機械手臂所需的零件總共有155個</span></p>
<p>若不加入重複使用的零件總數有58個</p>
<p><a href="https://drive.google.com/drive/folders/1KMaE3LswPPx1LT_33497LAf8NL_FBQ2o?usp=sharing">uarm零件檔</a></p>
<p><a href="https://drive.google.com/drive/folders/1B6A1yaae9CZI7iGY_2zhSUvrhkbLsOH_?usp=sharing">uarm組合檔</a></p>
<p><a href="https://drive.google.com/drive/folders/1iZkhToiHoT2L2zulLLaWTC-AtB86e7L1?usp=sharing">uarm CoppeliaSim模擬檔</a></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/48.png" width="500"/></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/49.png" width="500"/></p>
<p>M2X4 螺絲</p>
<p>M3X4 内六角<span>圓頭</span><span>螺絲</span></p>
<p>M3X5 内六角<span>圓頭</span><span>螺絲</span></p>
<p>M3X5 平頭<span>螺絲</span></p>
<p>M3X5 沉頭<span>螺絲</span></p>
<p>M3X5 扁平<span>頭鐵鍍鎳</span><span>螺絲</span></p>
<p>M3X5 <span>圓頭</span>黑色十字<span>螺絲</span></p>
<p>M3X6 内六角圓頭<span>螺絲</span></p>
<p>M3X15 雙通<span>螺絲</span></p>
<p>M4X5 顶<span>螺絲</span></p>
<p>M4X6 沉<span>頭</span><span>螺絲</span></p>
<p>M4X7 平<span>頭</span><span>螺絲</span></p>
<p>M4X10 平<span>頭</span><span>螺絲</span></p>
<p>M4X15 平頭<span>螺絲</span></p>
<p><span>MF84</span></p>
<p>2mm導光柱</p>
<p>2mm導熱硅胶片</p>
<p>3Dprint轉接板</p>
<p>5-13-4軸承</p>
<p>6X2.5 磁鐵</p>
<p>8.3X1.5 防滑墊</p>
<p>前端通用件</p>
<p>前端關節</p>
<p>7mm 支撐柱</p>
<p>3mm 鋁支撐柱</p>
<p>三角形連桿軸承壓緊件</p>
<p>三角形連桿</p>
<p>絞鍊</p>
<p>主臂關節2</p>
<p>主臂關節1</p>
<p>電機軸承支撐座_左側</p>
<p>電機軸承支撐座_右側</p>
<p>右側曲柄</p>
<p>輸出軸</p>
<p>右側連桿</p>
<p>左側連桿</p>
<p>4mm 鋁支撐柱</p>
<p>減速箱上殼</p>
<p><span>減速箱下殼</span></p>
<p>L型連接件</p>
<p>軸承支撐軸</p>
<p>軸承支撐圈</p>
<p>底座上蓋</p>
<p>底座中間部分</p>
<p>底座蓋</p>
<p>磁编碼器PCB</p>
<p>42進步電機</p>
<p>塑料蓋板</p>
<p>利用老師今天所教的可以使用py檔案來run</p>
<p>就可以得知uarm機械手臂</p>
<p>30%零件採steel製，其餘採<span>A</span><span>l</span><span>uminum製，總重量</span>約<span>2,2205kg</span></p>
<p>全部零件採Aluminum<span>製，總重量<span>約1,412kg</span></span></p>
<p>全部零件採steel製，<span>總重量</span><span>約4,1062kg</span><br/><br/></p>
<p></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" video="" width="960">
<source src="https://a40923101.github.io/cd2022/downloads/wink33.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h2>w12 40923103</h2>
<div class="winkVideoControlBarProgressThumbClass"><span>本週透過上課時所給的程式碼，套用到NX程式裡，就可以跑出來顯示組合件裡的零件組和總重量。</span>所需的零件總共有155個。</div>
<div class="winkVideoControlBarProgressThumbClass"><img alt="" height="540" src="https://40923103.github.io/cd2022/images/%E7%B5%84%E5%90%88%E6%AA%94%E5%9C%96%E7%89%87.png" width="960"/></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
<div class="winkVideoControlBarProgressThumbClass"><img alt="" height="400" src="https://40923103.github.io/cd2022/images/%E9%9B%B6%E4%BB%B6%E5%9C%96%E5%9C%96-1.jpg" width="600"/></div>
<div class="winkVideoControlBarProgressThumbClass"><img alt="" height="400" src="https://40923103.github.io/cd2022/images/%E9%9B%B6%E4%BB%B6%E5%9C%96%E5%9C%96-2.jpg" width="600"/></div>
<h2>w12 40923108</h2>
<p>本週任務：</p>
<ol>
<li>
<p>cd2022_uarm_nx12_imported.7z 中, 若計入重複引用的零件, 總數有多少? 請列出組成此一 uarm 機械手臂所需的 BOM 列表。</p>
<p>Ans：<span>所需的零件總共有155個。<a href="https://github.com/40923108/cd2022/blob/main/downloads/BOM%E5%88%97%E8%A1%A8.txt">BOM列表</a></span></p>
</li>
<li>
<p><span>若不計入重複引用的零件, 總數有多少?請列出各零件名稱.</span></p>
<p>Ans：58個。分別為：M2X4 螺絲、M3X4 内六角圓頭螺絲、M3X5 内六角圓頭螺絲、M3X5 平頭螺絲、M3X5 沉頭螺絲、M3X5 扁平頭鐵鍍鎳螺絲、M3X5 圓頭黑色十字螺絲、M3X6 内六角圓頭螺絲、M3X15 雙通螺絲、M4X5 頂螺絲、M4X6 沉頭螺絲、M4X7 平頭螺絲、M4X10 平頭螺絲、M4X15 平頭螺絲、MF84、2mm導光柱、2mm導熱硅胶片、3Dprint轉接板、5-13-4軸承、6X2.5 磁鐵、8.3X1.5 防滑墊、前端通用件、前端關節、7mm 支撐柱、3mm 鋁支撐柱、三角形連桿軸承壓緊件、三角形連桿、絞鍊、主臂關節2、主臂關節1、電機軸承支撐座_左側、電機軸承支撐座_右側、右側曲柄、輸出軸、右側連桿、左側連桿、4mm 鋁支撐柱、減速箱上殼、減速箱下殼、L型連接件、軸承支撐軸、軸承支撐圈、底座上蓋、底座中間部分、底座蓋、磁编碼器PCB、42進步電機、塑料蓋板。</p>
</li>
<li>
<p>當執行機械手臂的設計過程中, 若已知各零件所擬採用的零件材料密度, 請問此一設計中的 uarm 機械手臂的淨重量為多少?</p>
<p>Ans：<span>30% 零件採 Steel 製, 其餘採 Aluminum 製, 總重量約 2.2205kg。</span><br/><span>         全部零件採 Aluminum 製, 總重量約 1.4123kg。</span><br/><span>         全部零件採 Steel 製, 總重量約 4.1062kg。</span></p>
</li>
</ol>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="./../cmsimde/static" data-varname="winkVideoData" height="540" width="960">
<source src="https://40923108.github.io/cd2022/downloads/w12.mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h2>w12 40971134</h2>
<p><span>本週透過上課時所給的程式碼，套用到NX程式裡，就可以跑出來顯示組合件裡的零件組和總重量。</span><span>所需的零件總共有155個。</span></p>
<p>cadlab startup</p>
<p></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="630" width="1008">
<source src="https://40971134.github.io/cd2022/downloads/w12_cadlab_startup.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>graduate_school</p>
<p></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="630" width="1008">
<source src="https://40971134.github.io/cd2022/downloads/w12_graduate_school.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>Task</p>
<p></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="630" width="1008">
<source src="https://40971134.github.io/cd2022/downloads/w12_task.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h1>W14</h1>
<h2>w14 40923101</h2>
<p>利用<span>Coppeliasim</span>模擬MTB運轉</p>
<p>將方塊吸起來</p>
<p>轉半圈在放下來</p>
<p><a href="https://drive.google.com/drive/folders/1cxZ-1iEHpicxTs7F0EHx7J0nTv1P_Kqb?usp=sharing">MTB零件檔</a></p>
<p><a href="https://drive.google.com/drive/folders/1p5Y3OrLOQpoUlDZraFn_VA3J-Hrj8Y6P?usp=sharing">MTB組合檔</a></p>
<p><a href="https://drive.google.com/drive/folders/1QtjT5uATEoL0J2KkUbSmh_uEtDKQmmNj?usp=sharing">MTB CoppeliaSim模擬檔</a></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/56.png" width="500"/></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/57.png" width="500"/></p>
<p>利用老師給的程式碼去修改一些部份</p>
<p>使機械能購運轉</p>
<p>在運轉前要記得零件動態關閉</p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/58.png" width="500"/></p>
<p></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="https://a40923101.github.io/cd2022/downloads/wink34.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" video="" width="960">
<source src="/downloads/wink35.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
<div class="winkVideoPlayOverlayClass"></div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init() 
    axis1=sim.getObject('/joint1')
    axis2=sim.getObject('/joint2')
    axis3=sim.getObject('/joint3')
    suctionPad=sim.getObject('/suctionPad')
    MTB_Robot=sim.getObject("/base")
    BaseFrame=sim.getObject("/BaseFrame")
    block =sim.getObject("/block")
    rotation1 = 0
    distance3 = 0
    deg = math.pi/180.
end


function sysCall_actuation() 
--[[
    rotation1 = rotation1 + 0.5*deg
    print(rotation1)
    sim.setJointPosition(axis1, -rotation1)
    sim.setJointPosition(axis2, -rotation1)
]]

    message, auxiliaryData=sim.getSimulatorMessage()
        while message ~= -1 do
            key=auxiliaryData[1]
            sim.addStatusbarMessage('user press key:'..key)
            if (message==sim.message_keypress) then
               --if (auxiliaryData[1]==112) then --p activate the suction pad
                if (auxiliaryData[1]==string.byte('p')) then
                    -- if key p pressed activate the suction mode
sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','true')
                end -- if p
                if (auxiliaryData[1]==113) then --q deactivate the suction pad
                    -- if key q pressed deactivate the suction mode
sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','false')
                end -- if q
                if (auxiliaryData[1]==114) then --r right turn in degree
                    -- if key r pressed axis1 angle adds 5 degrees
                     rotation1 = rotation1 + 5*deg
                     sim.setJointPosition(axis1, rotation1)
                end -- if r
                if (auxiliaryData[1]==108) then --l left turn in degree
                    -- if key l pressed axis1 angle substract 5 degrees
                     rotation1 = rotation1 - 5*deg
                     sim.setJointPosition(axis1, rotation1)
                end -- if l
                if (auxiliaryData[1]==100) then --d suction pad down
                    -- if key d pressed axis3 will down 0.01 m
                     distance3 = distance3 + 0.01
                     sim.setJointPosition(axis3, distance3)
                end -- if d
                if (auxiliaryData[1]==117) then --u suction pad up
                    -- if key u pressed axis3 will up 0.01 m
                     distance3 = distance3 - 0.01
                     sim.setJointPosition(axis3, distance3)
                end -- if u
                if (auxiliaryData[1]==99) then --c coordinate of block
                    blockPosition = sim.getObjectPosition(block, BaseFrame)
                    sim.addStatusbarMessage("coordinate:"..table_to_string(blockPosition))
                end --if c
           end  -- if
    message, auxiliaryData=sim.getSimulatorMessage()
        end -- while
end -- function
function sysCall_sensing() 
--[[
    -- Read Proximity sensor (0= nothing detected, 1 = object detected)
    local res = sim.readProximitySensor(proximity)

    -- Check if possible to insert an new box
    if (sim.getSimulationTime()-T_last_inserted &gt; T_insert) and not hasStopped then
        insertBox()
    end

    -- If proximity sensor detects an object, stop the belt, stop inserting objects
    if res == 1 and not hasStopped then
        if boolList[1] then
            sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",0)
            deltaTime = sim.getSimulationTime()-T_last_inserted
            hasStopped = true
        else
            local box = table.remove(boxList,1)
            local boxDummy = table.remove(boxDummyList,1)
            table.remove(boolList,1)

            sim.removeObject(box)
            sim.removeObject(boxDummy)
        end
    end

    -- If proximity sensor detects nothing and belt has stopped, start belt, continue inserting
    if res == 0 and hasStopped then
        sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",beltSpeed)
        hasStopped = false
        T_last_inserted = sim.getSimulationTime()-deltaTime
    end
    
]]--
end
function sysCall_cleanup() 
end 
-- Convert a lua table into a lua syntactically correct string
function table_to_string(tbl)
    local result = "{"
    for k, v in pairs(tbl) do
        -- Check the key type (ignore any numerical keys - assume its an array)
        if type(k) == "string" then
            result = result.."[\""..k.."\"]".."="
        end

        -- Check the value type
        if type(v) == "table" then
            result = result..table_to_string(v)
        elseif type(v) == "boolean" then
            result = result..tostring(v)
        else
            v = round(v, 4)
            result = result.."\""..v.."\""
        end
        result = result..","
    end
    -- Remove leading commas from the result
    if result ~= "" then
        result = result:sub(1, result:len()-1)
    end
    return result.."}"
end
function round(x, n)
    n = math.pow(10, n or 0)
    x = x * n
    if x &gt;= 0 then x = math.floor(x + 0.5) else x = math.ceil(x - 0.5) end
    return x / n
end


function insertBox()
    -- Generate random numbers
    local rand1 = math.random()
    local rand2 = math.random()
    local rand3 = math.random()
    -- Generate random disturbances on position and orientation
    local dx = (2*rand1-1)*0.1
    local dy = (2*rand2-1)*0.1
    local dphi = (2*rand3-1)*0.5
    local disturbedCoordinates = {0,0,0}
    disturbedCoordinates[1] = insertCoordinate[1]+dx
    disturbedCoordinates[2] = insertCoordinate[2]+dy
    disturbedCoordinates[3] = insertCoordinate[3]
    -- Copy and paste box and boxDummy
    local insertedObjects = sim.copyPasteObjects({box,boxDummy},0)
    -- Update last inserted box time
    T_last_inserted = sim.getSimulationTime()
    -- Move and rotate
    sim.setObjectPosition(insertedObjects[1],-1,disturbedCoordinates)
    sim.setObjectOrientation(insertedObjects[1],-1,{0,0,dphi})
    -- Store handles to boxes and dummies
    table.insert(boxList,insertedObjects[1])
    table.insert(boxDummyList,insertedObjects[2]) 
    -- Decide if object is good or bad
    local decision = math.random() 
    if decision &lt;= goodPercentage then
    -- Object is good, assign goodColor
        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,goodColor)
        table.insert(boolList,true)
    else
    -- Object is bad, assign random color
        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,{rand1,rand2,rand3})
        table.insert(boolList,false)
    end
end


</pre>
<h2>w14 40923103</h2>
<p><span>以鍵盤控制 MTB_nx robot (for CoppeliaSim 4.3.0)</span></p>
<p><span></span>R(向右轉) L(向左轉) U(向上移) D(向下移)</p>
<p></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="https://40923103.github.io/cd2022/downloads/w14%E8%BB%B8%E5%BD%B1%E7%89%87.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
</div>
</div>
<h2>w14 40923108</h2>
<p><a href="https://gmnfuedutw-my.sharepoint.com/personal/40923108_gm_nfu_edu_tw/_layouts/15/onedrive.aspx?id=%2Fpersonal%2F40923108%5Fgm%5Fnfu%5Fedu%5Ftw%2FDocuments%2FMTB">MTB</a>檔案</p>
<p><span>以程式自己作動：</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/8UnfW5zgOZ4" width="560"></iframe></span></p>
<p><span>以鍵盤控制 MTB_nx 機器人（適用於 CoppeliaSim 4.3.0）：</span></p>
<p><span><span></span></span></p>
<p>L：順時針轉   R：逆時針轉</p>
<p>U：吸盤上升  D：吸盤下降</p>
<p>P：激活吸盤  Q：停止吸盤</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/T0ypf9G3V6A" width="560"></iframe></p>
<h2>w14 40971134</h2>
<p><span>以鍵盤控制 MTB_nx robot (for CoppeliaSim 4.3.0)</span></p>
<p>U(向上移) D(向下移) R(向右轉) L(向左轉)</p>
<p></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="630" width="950">
<source src="https://40971134.github.io/cd2022/downloads/w14%E8%BB%B8%E5%BD%B1%E7%89%87.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h1>W15</h1>
<h2>w15 40923101</h2>
<p>使用老師的程式，利用鍵盤來操作旋轉模擬</p>
<p>就可以順時針及逆時針旋轉</p>
<p>利用<span>UARM</span>來Tic-Tae-Toe遊戲模擬</p>
<p><span>joint1，</span>L為順時針，K<span>為逆時針</span></p>
<p><span>joint2，</span>J<span>為順時針，</span>H<span>為逆時針</span></p>
<p><span>joint3，</span>G<span>為順時針，</span>F<span>為逆時針</span></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/67.png" width="500"/></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/68.png" width="500"/></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/69.png" width="500"/></p>
<p></p>
<p></p>
<p></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" video="" width="960">
<source src="https://a40923101.github.io/cd2022/downloads/wink38.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    axis1=sim.getObject('./joint1')
    axis2=sim.getObject('./joint2')
    axis3=sim.getObject('./joint3')
    suctionPad=sim.getObject('/suctionPad')
    rotation1 = 0
    rotation2 = 0
    rotation3 = 0
    deg = math.pi/180.
    enableSuctionPad(true)
end
function enableSuctionPad(enable)
    -- use the suctionPad object to pass the variable activity value
    -- if enable = true, the activity = 'on'
    if enable then
        sim.writeCustomDataBlock(suctionPad,'activity','on')
    else
        sim.writeCustomDataBlock(suctionPad,'activity','off')
    end
end
function sysCall_actuation() 
--[[
    rotation1 = rotation1 + 1*deg
    print(rotation1)
    sim.setJointPosition(axis1, -rotation1)
    sim.setJointPosition(axis2, -rotation1)
]]
    message, auxiliaryData=sim.getSimulatorMessage()
    while message ~= -1 do
        key=auxiliaryData[1]
        sim.addStatusbarMessage('user press key:'..key)
        if (message==sim.message_keypress) then
           --if (auxiliaryData[1]==112) then --p activate the suction pad
            if (auxiliaryData[1]==string.byte('p')) then
                -- if key p pressed activate the suction mode
--sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','true')
                enableSuctionPad(true)
            end -- if p
            if (auxiliaryData[1]==string.byte('q')) then --q deactivate the suction pad
                -- if key q pressed deactivate the suction mode
--sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','false')
                enableSuctionPad(false)
            end -- if q
            if (auxiliaryData[1]==string.byte('k')) then --k right turn in degree
                -- if key k pressed axis1 angle adds 2 degrees
                 rotation1 = rotation1 + 2*deg
                 --sim.setJointPosition(axis1, rotation1)
                 sim.setJointTargetPosition(axis1, rotation1)
            end -- if k
            if (auxiliaryData[1]==string.byte('l')) then --l left turn in degree
                -- if key l pressed axis1 angle substract 2 degrees
                 rotation1 = rotation1 - 2*deg
                 --sim.setJointPosition(axis1, rotation1)
                 sim.setJointTargetPosition(axis1, rotation1)
            end -- if l
-- for joint2 start ##########################################################
            if (auxiliaryData[1]== string.byte("h")) then --r right turn in degree
                -- if key r pressed axis1 angle adds 2 degrees
                 rotation2 = rotation2 + 1*deg
                 --sim.setJointPosition(axis2, rotation2)
                 sim.setJointTargetPosition(axis2, rotation2)
            end -- if k
            if (auxiliaryData[1]==string.byte("j")) then
                -- if key j pressed axis2 angle substract 2 degrees
                 rotation2 = rotation2 - 1*deg
                 --sim.setJointPosition(axis2, rotation2)
                 sim.setJointTargetPosition(axis2, rotation2)
            end -- if j
-- for joint2 end ##########################################################
-- for joint3 start ##########################################################
            if (auxiliaryData[1]== string.byte("f")) then
                -- if key f pressed axis3 angle adds 2 degrees
                 rotation3 = rotation3 + 1*deg
                 --sim.setJointPosition(axis3, rotation3)
                 sim.setJointTargetPosition(axis3, rotation3)
            end -- if f
            if (auxiliaryData[1]==string.byte("g")) then
                -- if key g pressed axis3 angle substract 2 degrees
                 rotation3 = rotation3 - 1*deg
                 --sim.setJointPosition(axis3, rotation3)
                 sim.setJointTargetPosition(axis3, rotation3)
            end -- if g
-- for joint3 end ##########################################################
            if (auxiliaryData[1]==99) then --c coordinate of block
                blockPosition = sim.getObjectPosition(block, BaseFrame)
                sim.addStatusbarMessage("coordinate:"..table_to_string(blockPosition))
            end --if c
       end  -- if
    message, auxiliaryData=sim.getSimulatorMessage()
    end -- while
end -- function

function sysCall_sensing() 
--[[
    -- Read Proximity sensor (0= nothing detected, 1 = object detected)
    local res = sim.readProximitySensor(proximity)

    -- Check if possible to insert an new box
    if (sim.getSimulationTime()-T_last_inserted &gt; T_insert) and not hasStopped then
        insertBox()
    end

    -- If proximity sensor detects an object, stop the belt, stop inserting objects
    if res == 1 and not hasStopped then
        if boolList[1] then
            sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",0)
            deltaTime = sim.getSimulationTime()-T_last_inserted
            hasStopped = true
        else
            local box = table.remove(boxList,1)
            local boxDummy = table.remove(boxDummyList,1)
            table.remove(boolList,1)

            sim.removeObject(box)
            sim.removeObject(boxDummy)
        end
    end

    -- If proximity sensor detects nothing and belt has stopped, start belt, continue inserting
    if res == 0 and hasStopped then
        sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",beltSpeed)
        hasStopped = false
        T_last_inserted = sim.getSimulationTime()-deltaTime
    end
    
]]--
end
function sysCall_sensing()
    -- put your sensing code here
end
function sysCall_cleanup()
    -- do some clean-up here
end
-- Convert a lua table into a lua syntactically correct string
function table_to_string(tbl)
    local result = "{"
    for k, v in pairs(tbl) do
        -- Check the key type (ignore any numerical keys - assume its an array)
        if type(k) == "string" then
            result = result.."[\""..k.."\"]".."="
        end
        -- Check the value type
        if type(v) == "table" then
            result = result..table_to_string(v)
        elseif type(v) == "boolean" then
            result = result..tostring(v)
        else
            v = round(v, 4)
            result = result.."\""..v.."\""
        end
        result = result..","
    end
    -- Remove leading commas from the result
    if result ~= "" then
        result = result:sub(1, result:len()-1)
    end
    return result.."}"
end
function round(x, n)
    n = math.pow(10, n or 0)
    x = x * n
    if x &gt;= 0 then x = math.floor(x + 0.5) else x = math.ceil(x - 0.5) end
    return x / n
end
function insertBox()
    -- Generate random numbers
    local rand1 = math.random()
    local rand2 = math.random()
    local rand3 = math.random()
    -- Generate random disturbances on position and orientation
    local dx = (2*rand1-1)*0.1
    local dy = (2*rand2-1)*0.1
    local dphi = (2*rand3-1)*0.5
    local disturbedCoordinates = {0,0,0}
    disturbedCoordinates[1] = insertCoordinate[1]+dx
    disturbedCoordinates[2] = insertCoordinate[2]+dy
    disturbedCoordinates[3] = insertCoordinate[3]
    -- Copy and paste box and boxDummy
    local insertedObjects = sim.copyPasteObjects({box,boxDummy},0)
    -- Update last inserted box time
    T_last_inserted = sim.getSimulationTime()
    -- Move and rotate
    sim.setObjectPosition(insertedObjects[1],-1,disturbedCoordinates)
    sim.setObjectOrientation(insertedObjects[1],-1,{0,0,dphi})
    -- Store handles to boxes and dummies
    table.insert(boxList,insertedObjects[1])
    table.insert(boxDummyList,insertedObjects[2]) 
    -- Decide if object is good or bad
    local decision = math.random() 
    if decision &lt;= goodPercentage then
    -- Object is good, assign goodColor
        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,goodColor)
        table.insert(boolList,true)
    else
    -- Object is bad, assign random color
        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,{rand1,rand2,rand3})
        table.insert(boolList,false)
    end
end
-- See the user manual or the available code snippets for additional callback functions and details
</pre>
<p></p>
<h2>w15 40923103</h2>
<p>利用uArm機械手臂匯入程式，用吸盤吸取小方塊</p>
<p></p>
<div class="winkVideoPlayOverlayClass"></div>
<h2>w15 40923108</h2>
<p>利用UARM來Tic-Tae-Toe遊戲模擬</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/SMOMMEPeg8w" width="560"></iframe></p>
<p>轉入coppliasim後匯入程式碼：</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    axis1=sim.getObject('./joint1')
    axis2=sim.getObject('./joint2')
    axis3=sim.getObject('./joint3')
    suctionPad=sim.getObject('/suctionPad')
    rotation1 = 0
    rotation2 = 0
    rotation3 = 0
    deg = math.pi/180.
    enableSuctionPad(true)
end
function enableSuctionPad(enable)
    -- use the suctionPad object to pass the variable activity value
    -- if enable = true, the activity = 'on'
    if enable then
        sim.writeCustomDataBlock(suctionPad,'activity','on')
    else
        sim.writeCustomDataBlock(suctionPad,'activity','off')
    end
end
function sysCall_actuation() 
--[[
    rotation1 = rotation1 + 1*deg
    print(rotation1)
    sim.setJointPosition(axis1, -rotation1)
    sim.setJointPosition(axis2, -rotation1)
]]
    message, auxiliaryData=sim.getSimulatorMessage()
    while message ~= -1 do
        key=auxiliaryData[1]
        sim.addStatusbarMessage('user press key:'..key)
        if (message==sim.message_keypress) then
           --if (auxiliaryData[1]==112) then --p activate the suction pad
            if (auxiliaryData[1]==string.byte('p')) then
                -- if key p pressed activate the suction mode
--sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','true')
                enableSuctionPad(true)
            end -- if p
            if (auxiliaryData[1]==string.byte('q')) then --q deactivate the suction pad
                -- if key q pressed deactivate the suction mode
--sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','false')
                enableSuctionPad(false)
            end -- if q
            if (auxiliaryData[1]==string.byte('k')) then --k right turn in degree
                -- if key k pressed axis1 angle adds 2 degrees
                 rotation1 = rotation1 + 2*deg
                 --sim.setJointPosition(axis1, rotation1)
                 sim.setJointTargetPosition(axis1, rotation1)
            end -- if k
            if (auxiliaryData[1]==string.byte('l')) then --l left turn in degree
                -- if key l pressed axis1 angle substract 2 degrees
                 rotation1 = rotation1 - 2*deg
                 --sim.setJointPosition(axis1, rotation1)
                 sim.setJointTargetPosition(axis1, rotation1)
            end -- if l
-- for joint2 start ##########################################################
            if (auxiliaryData[1]== string.byte("h")) then --r right turn in degree
                -- if key r pressed axis1 angle adds 2 degrees
                 rotation2 = rotation2 + 1*deg
                 --sim.setJointPosition(axis2, rotation2)
                 sim.setJointTargetPosition(axis2, rotation2)
            end -- if k
            if (auxiliaryData[1]==string.byte("j")) then
                -- if key j pressed axis2 angle substract 2 degrees
                 rotation2 = rotation2 - 1*deg
                 --sim.setJointPosition(axis2, rotation2)
                 sim.setJointTargetPosition(axis2, rotation2)
            end -- if j
-- for joint2 end ##########################################################
-- for joint3 start ##########################################################
            if (auxiliaryData[1]== string.byte("f")) then
                -- if key f pressed axis3 angle adds 2 degrees
                 rotation3 = rotation3 + 1*deg
                 --sim.setJointPosition(axis3, rotation3)
                 sim.setJointTargetPosition(axis3, rotation3)
            end -- if f
            if (auxiliaryData[1]==string.byte("g")) then
                -- if key g pressed axis3 angle substract 2 degrees
                 rotation3 = rotation3 - 1*deg
                 --sim.setJointPosition(axis3, rotation3)
                 sim.setJointTargetPosition(axis3, rotation3)
            end -- if g
-- for joint3 end ##########################################################
            if (auxiliaryData[1]==99) then --c coordinate of block
                blockPosition = sim.getObjectPosition(block, BaseFrame)
                sim.addStatusbarMessage("coordinate:"..table_to_string(blockPosition))
            end --if c
       end  -- if
    message, auxiliaryData=sim.getSimulatorMessage()
    end -- while
end -- function
  
function sysCall_sensing() 
--[[
    -- Read Proximity sensor (0= nothing detected, 1 = object detected)
    local res = sim.readProximitySensor(proximity)
  
    -- Check if possible to insert an new box
    if (sim.getSimulationTime()-T_last_inserted &gt; T_insert) and not hasStopped then
        insertBox()
    end
  
    -- If proximity sensor detects an object, stop the belt, stop inserting objects
    if res == 1 and not hasStopped then
        if boolList[1] then
            sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",0)
            deltaTime = sim.getSimulationTime()-T_last_inserted
            hasStopped = true
        else
            local box = table.remove(boxList,1)
            local boxDummy = table.remove(boxDummyList,1)
            table.remove(boolList,1)
  
            sim.removeObject(box)
            sim.removeObject(boxDummy)
        end
    end
  
    -- If proximity sensor detects nothing and belt has stopped, start belt, continue inserting
    if res == 0 and hasStopped then
        sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",beltSpeed)
        hasStopped = false
        T_last_inserted = sim.getSimulationTime()-deltaTime
    end
      
]]--
end
function sysCall_sensing()
    -- put your sensing code here
end
function sysCall_cleanup()
    -- do some clean-up here
end
-- Convert a lua table into a lua syntactically correct string
function table_to_string(tbl)
    local result = "{"
    for k, v in pairs(tbl) do
        -- Check the key type (ignore any numerical keys - assume its an array)
        if type(k) == "string" then
            result = result.."[\""..k.."\"]".."="
        end
        -- Check the value type
        if type(v) == "table" then
            result = result..table_to_string(v)
        elseif type(v) == "boolean" then
            result = result..tostring(v)
        else
            v = round(v, 4)
            result = result.."\""..v.."\""
        end
        result = result..","
    end
    -- Remove leading commas from the result
    if result ~= "" then
        result = result:sub(1, result:len()-1)
    end
    return result.."}"
end
function round(x, n)
    n = math.pow(10, n or 0)
    x = x * n
    if x &gt;= 0 then x = math.floor(x + 0.5) else x = math.ceil(x - 0.5) end
    return x / n
end
function insertBox()
    -- Generate random numbers
    local rand1 = math.random()
    local rand2 = math.random()
    local rand3 = math.random()
    -- Generate random disturbances on position and orientation
    local dx = (2*rand1-1)*0.1
    local dy = (2*rand2-1)*0.1
    local dphi = (2*rand3-1)*0.5
    local disturbedCoordinates = {0,0,0}
    disturbedCoordinates[1] = insertCoordinate[1]+dx
    disturbedCoordinates[2] = insertCoordinate[2]+dy
    disturbedCoordinates[3] = insertCoordinate[3]
    -- Copy and paste box and boxDummy
    local insertedObjects = sim.copyPasteObjects({box,boxDummy},0)
    -- Update last inserted box time
    T_last_inserted = sim.getSimulationTime()
    -- Move and rotate
    sim.setObjectPosition(insertedObjects[1],-1,disturbedCoordinates)
    sim.setObjectOrientation(insertedObjects[1],-1,{0,0,dphi})
    -- Store handles to boxes and dummies
    table.insert(boxList,insertedObjects[1])
    table.insert(boxDummyList,insertedObjects[2]) 
    -- Decide if object is good or bad
    local decision = math.random() 
    if decision &lt;= goodPercentage then
    -- Object is good, assign goodColor
        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,goodColor)
        table.insert(boolList,true)
    else
    -- Object is bad, assign random color
        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,{rand1,rand2,rand3})
        table.insert(boolList,false)
    end
end
-- See the user manual or the available code snippets for additional callback functions and details</pre>
<p></p>
<h1>W16</h1>
<p><span>任務一：</span></p>
<p><span>利用 tkinter GUI 介面 slider 控制 uArm 機械手臂</span></p>
<p><span>任務二：</span></p>
<p><span>利用 OpenCV 擷取場景中的 Vision Sensor 串流影像</span></p>
<p><span>任務三：</span></p>
<p><span>w15_rotating_cuboid 加入網際 Vision Sensor 串流, 使用者啟動後, 各用戶可以透過瀏覽器擷取場景中的串流影像</span></p>
<h2>w16 40923101</h2>
<p><span>利用tkinter GUI介面slider控制uArm機械手臂</span></p>
<p><span><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/60.png" width="500"/></span></p>
<p><span><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/63.png" width="500"/></span></p>
<p><span></span></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" video="" width="960">
<source src="https://a40923101.github.io/cd2022/downloads/wink36.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><span>利用OpenCV擷取場景中的Vision Sensor串流影像</span></p>
<p><span><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/61.png" width="500"/></span></p>
<p><span><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/62.png" width="500"/></span></p>
<p><span></span></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" video="" width="960">
<source src="https://a40923101.github.io/cd2022/downloads/wink37.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
</div>
</div>
<h2>w16 40923103</h2>
<p>利用tkinter GUI介面slider控制uArm機械手臂</p>
<p></p>
<p></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="https://40923103.github.io/cd2022/downloads/w16%E5%BD%B1%E7%89%87.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
</div>
</div>
<p>online exam</p>
<div class="winkVideoControlBarProgressThumbClass">
<p>1.online exam已知左側綠色底座的 uArm 機械手臂, 其基座座標原點位於絕對座標 (1.0, 0.25, 0), 啟動模擬後 green_suctionpad_frame 座標原點則位於 (0.22859, 0.26047, 0.36576), 請列出運算式說明, 啟動模擬後 joint1, joint2 與 joint3 分別以逆時針旋轉 5 度後, 求 green_suctionpad_frame 的絕對座標值.( x:-1.0000 , y: +0.2500 , z: -0.1786 )</p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="https://40923103.github.io/cd2022/downloads/w16%E7%AC%AC%E4%B8%80%E5%80%8B%E4%BD%9C%E6%A5%AD.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><br/>2.已知左側 uarm 前方的紅色方塊頂端中心座標值為 (0.2, 0.4, 0.1), 請列出運算式說明左側 uarm 機械手臂的 joint1, joint2 與 joint3 該如何旋轉才能讓 end effector 的吸盤末端中心點移動至紅色方塊頂端中心?<br/>Reference:</p>
</div>
<div class="winkVideoPlayOverlayClass"></div>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="https://40923103.github.io/cd2022/downloads/w16-2%E5%BD%B1%E7%89%87.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div><h2>w16 40923108</h2>
<p>1.已知左側綠色底座的 uArm 機械手臂, 其基座座標原點位於絕對座標 (1.0, 0.25, 0), 啟動模擬後 green_suctionpad_frame 座標原點則位於 (0.22859, 0.26047, 0.36576), 請列出運算式說明, 啟動模擬後 joint1, joint2 與 joint3 分別以逆時針旋轉 5 度後, 求 green_suctionpad_frame 的絕對座標值?</p>
<p>Ans：X(0.264)，Y(0.1958)，Z(0.3895)</p>
<p><img alt="" height="478" src="https://40923108.github.io/cd2022/images/test%20.png" width="850"/></p>
<p><span>joint1：k</span>為逆時針，l<span>為順時針</span></p>
<p><span>joint2：h<span>為逆時針，j</span><span>為順時針</span></span></p>
<p><span>joint3：f<span>為逆時針，g</span><span>為順時針</span></span></p>
<p><img alt="" height="478" src="https://40923108.github.io/cd2022/images/code1.png" width="850"/></p>
<p></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="./../cmsimde/static" data-varname="winkVideoData" height="540" width="960">
<source src="https://40923108.github.io/cd2022/downloads/online%20test-1.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"><hr/></div>
</div>
</div>
<hr/>
<p>2.已知左側 uarm 前方的紅色方塊頂端中心座標值為 (0.2, 0.4, 0.1), 請列出運算式說明左側 uarm 機械手臂的 joint1, joint2 與 joint3 該如何旋轉才能讓 end effector 的吸盤末端中心點移動至紅色方塊頂端中心?</p>
<p>Ans：<span>joint1順時針10度，joint2逆</span><span>時針28度調整，joint3<span>順時針32度就可以接近紅色方塊的中心。</span></span></p>
<p><img alt="" height="478" src="https://40923108.github.io/cd2022/images/test2.png" width="850"/></p>
<p><span>joint1：u</span>為逆時針，i<span>為順時針</span></p>
<p><span>joint2：t<span>為逆時針，y</span><span>為順時針</span></span></p>
<p><span>joint3：e<span>為逆時針，r</span><span>為順時針</span></span></p>
<p><img alt="" height="478" src="https://40923108.github.io/cd2022/images/code2.png" width="850"/></p>
<p></p>
<h2>w16 40923156</h2>
<p><span>1.已知左側綠色底座的uArm機械手臂，其基座座標原點位於絕對座標(1.0, 0.25, 0)</span><span>，</span><span>啟動模擬後green_suctionpad_frame座標原點則位於 (0.22859,0.26047,0.36576)</span><span>，</span><span>請列出運算式說明</span><span>，</span><span>啟動模擬後 joint1</span><span>，</span><span>joint2 與 joint3 分別以逆時針旋轉5度後</span><span>，</span><span>求green_suctionpad_frame的絕對座標值</span></p>
<p><span><img alt="" src="https://zhilin-0817.github.io/cd2022/images/06190003.png" width="500"/></span></p>
<p></p>
<p><img alt="" src="https://zhilin-0817.github.io/cd2022/images/06190004.png" width="500"/></p>
<p></p>
<p>2.已知左側 uarm 前方的紅色方塊頂端中心座標值為 (0.2, 0.4, 0.1), 請列出運算式說明左側 uarm 機械手臂的 joint1, joint2 與 joint3 該如何旋轉才能讓 end effector 的吸盤末端中心點移動至紅色方塊頂端中心?</p>
<p><img alt="" src="https://zhilin-0817.github.io/cd2022/images/06190001.png" width="500"/></p>
<p><span>x:+0.2608 y:0.6202 z:0.3460</span></p>
<p><span></span></p>
<p><span></span></p>
<p><span></span></p>
<p><img alt="" src="https://zhilin-0817.github.io/cd2022/images/06190002.png" width="500"/></p>
<p><span>x:0.2079 y:+1.1202 z:+0.1078</span></p>
<p>CoppeliaSim Python remote API 範例:</p>
<p>利用 tkinter GUI 介面 slider 控制 uArm 機械手臂</p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="594" video="" width="1056">
<source src="https://zhilin-0817.github.io/cd2022/downloads/w16-111.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div><h1>W17</h1>
<h2>w17 40923101</h2>
<p>利用<span>UARM</span>來執行Tic-Tae-Toe遊戲模擬</p>
<p>利用15周的作業來修改</p>
<p>利用鍵盤來操作旋轉模擬</p>
<p>我修改了老師的程式</p>
<p>將操作按鍵改為我較熟悉的方式</p>
<p><span>joint1，</span>L為順時針，K<span>為逆時針</span></p>
<p><span>joint2，S</span><span>為順時針，F</span><span>為逆時針</span></p>
<p><span>joint3，E</span><span>為順時針，D</span><span>為逆時針</span></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/75.png" width="500"/></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/76.png" width="500"/></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/77.png" width="500"/></p>
<p></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" video="" width="960">
<source src="https://a40923101.github.io/cd2022/downloads/wink39.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h1>期末考週</h1>
<h2>w18 40923101</h2>
<p><span>利用tkinter GUI介面slider控制uArm機械手臂</span></p>
<p><span><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/60.png" width="500"/></span></p>
<p><span><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/63.png" width="500"/></span></p>
<p><span></span></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" video="" width="960">
<source src="https://a40923101.github.io/cd2022/downloads/wink36.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><span>利用OpenCV擷取場景中的Vision Sensor串流影像</span></p>
<p><span><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/61.png" width="500"/></span></p>
<p><span><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/62.png" width="500"/></span></p>
<p><span></span></p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" video="" width="960">
<source src="https://a40923101.github.io/cd2022/downloads/wink37.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h2>w18 40923108</h2>
<p><span style="color: #000000; background-color: #ccffff;"><strong>任務一：</strong></span></p>
<p><span>利用nx修改 "絞鍊"與 "front joint" 零件的外型，並</span><span>將Triangular connecting rod與left link及end link等零組件與</span><span>right crank與right link的組件左右互換。</span></p>
<p><a href="https://github.com/40923108/cd2022/tree/main/downloads/40923108%20uarm">新組合檔</a></p>
<p><span>絞鍊：</span></p>
<p><span><img alt="" height="478" src="https://40923108.github.io/cd2022/images/uarm%20f1.png" width="850"/></span></p>
<p><span>前端關節(front joint)：</span></p>
<p><span><img alt="" height="478" src="https://40923108.github.io/cd2022/images/uarm%20f2.png" width="850"/></span></p>
<hr/>
<p><span style="background-color: #ccffff;"><strong>任務二：</strong></span></p>
<p>對老師原先給的零件檔案加以更改，即可完成。</p>
<p><span>front joint：</span></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="./../cmsimde/static" data-varname="winkVideoData" height="540" width="960">
<source src="./../downloads/期末考 前方關節.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div><h1>Note</h1>
<h2>組員上傳至大組網頁</h2>
<p>首先上傳時要先將<span><span style="color: #ff0000;">圖片</span>和<span style="color: #ff0000;">wink改成網址</span></span></p>
<p>先去個人靜態網頁開啟要上傳的照片，並將照片(或影片)<span style="color: #ff0000;">網址</span>複製下來。</p>
<p></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/22..png" width="500"/></p>
<p>接著到動態編輯將<span style="color: #ff0000;">網址</span>貼上</p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/21.png" width="500"/></p>
<p>接著修改wink影片，同樣是到<span>靜態網頁開啟wink並將網址複製下來</span></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/11.png" width="500"/></p>
<p><span>接著到動態編輯將原本的網址覆蓋貼上</span></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/13.png" width="500"/></p>
<p>至小黑窗推送</p>
<p><img caption="false" height="259" src="https://a40923101.github.io/cd2022/images/14.png" width="500"/></p>
<p>推完後到再重新開啟動態網頁，並將須上傳至大組網頁內容所有的code複製下來</p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/15.png" width="500"/></p>
<p>貼到白窗，記得標題要設置&lt;h1&gt;40923101&lt;/h1&gt; (自己設定學號)，存<span style="color: #ff0000;"> .txt檔</span></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/16.png" width="500"/></p>
<p>到組長創建的cd2022ag1，按下<span>Fork</span></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/17.png" width="500"/></p>
<p>點進去<span><span style="color: #ff0000;">downloads</span><span>，再點選<span style="color: #ff0000;">Upload files</span></span></span></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/18.png" width="500"/></p>
<p>選擇剛所存的.txt檔，並上傳上去</p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/19.png" width="500"/></p>
<p>然後按下<span style="color: #ff0000;">commit changes</span></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/20.png" width="500"/></p>
<p>接著到<span style="color: #ff0000;">pull requests </span>新增<span style="color: #ff0000;">New pull request</span></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/23.png" width="500"/></p>
<p><span>按下<span style="color: #ff0000;">Create pull request</span></span></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/24.png" width="500"/></p>
<p><span>再按一次<span style="color: #ff0000;">Create pull request</span></span></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/25.png" width="500"/></p>
<p>組長會開協同，可以自己同意<span style="color: #ff0000;">Confirm merge</span></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/26.png" width="500"/></p>
<p>檢查是否上傳成功</p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/27.png" width="500"/></p>
<p>wink教學影片：</p>
<p></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="./../cmsimde/static" data-varname="winkVideoData" height="540" width="960">
<source src="https://a40923101.github.io/cd2022/downloads/wink31.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h2>大組網頁同步方式</h2>
<p>方法1：</p>
<p>將原本需要<span>Pull </span><span>request的帳號調換，就可以把對方的資料反向Pull request到我的倉儲</span></p>
<p><span>Ex：原本是40923108在前面；a40923101在後方，需要同步40923108的倉儲及網頁內容，因此將兩者對調。</span></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/30.png" width="500"/></p>
<p><span>按下<span style="color: #ff0000;">create pull </span></span><span style="color: #ff0000;">request</span></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/28.png" width="500"/></p>
<p><span>再次按下<span style="color: #ff0000;">create pull </span></span><span style="color: #ff0000;">request</span></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/29.png" width="500"/></p>
<p>最後<span style="color: #ff0000;">Merge pull </span><span><span style="color: #ff0000;">request</span>，檢查有無成功</span></p>
<p><img caption="false" height="281" src="https://a40923101.github.io/cd2022/images/31.png" width="500"/></p>
<hr/>
<p>方法2：</p>
<ol>
<li>利用小黑窗進入個人倉儲<span> </span></li>
<li>查看遠端倉儲路徑<span> </span><strong><span style="color: #ff0000;">git remote -v</span> </strong><strong></strong>如果未設定過<span style="color: #ff0000;"><strong>upstream </strong></span>只會跑出兩行</li>
<li><strong><span style="color: #ff0000;">git remote add upstream</span> https://github.com/409231xx/cd2022agx.git</strong>把409231xx的cd2022agx倉儲設置為自己的upstream，執行此指令後無返回任何訊息，再次執行指令 <strong><span style="color: #ff0000;">git remote -v</span> </strong>檢查是否成功。</li>
<li><span style="color: #ff0000;"><strong>git status</strong> </span>檢查本地已沒有未提交之修改</li>
<li><span style="color: #ff0000;"><strong>git fetch upstream</strong></span><span> 為抓取組長之</span>倉儲並更新</li>
<li><span style="color: #ff0000;"><strong>git checkout main</strong> </span>切換至main分支</li>
<li><span style="color: #ff0000;"><strong>git merge upstream/main</strong> </span>合併遠程main分支</li>
<li><span style="color: #ff0000;"><strong>git push</strong></span><span> 將個人</span>倉儲推送至組長倉儲後自己名下之倉儲</li>
</ol>